// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Resume {
  id     String @id @default(cuid())
  userId String

  title       String?
  description String?

  imageUrl    String?
  colorHex    String  @default("#000000")
  borderStyle String  @default("squircle")
  summary     String?
  firstName   String?
  lastName    String?
  jobTitle    String?
  phone       String?
  email       String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workExperiences      WorkExperience[]
  educationExperiences Education[]
  skills               String[]

  @@map("resume") // biasanya nama table di post gres di set dari Resume(nama model) jadi resumes, disini kita rename dengan function map, yang tadinya resumes berubah jadi resume
}

model WorkExperience {
  id          String    @id @default(cuid())
  resumeId    String
  jobTitle    String?
  company     String?
  startDate   DateTime?
  endDate     DateTime?
  description String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  resume Resume @relation(fields: [resumeId], references: [id], onDelete: Cascade)
}

model Education {
  id String @id @default(cuid())

  resumeId  String
  degree    String?
  school    String?
  startDate DateTime?
  endDate   DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  resume Resume @relation(fields: [resumeId], references: [id], onDelete: Cascade)
}

model UserSubscription {
  id                      String   @id @default(cuid())
  userId                  String   @unique
  stripeCustomerId        String   @unique
  stripeSubscriptionId    String   @unique
  stripePriceId           String
  stripeCurrentPeriodEnd  DateTime
  stripeCancelAtPeriodEnd Boolean  @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user_subscriptions")
}
